mode: train # (train / eval)
logger:
  level: 20 # CRITICAL = 50, ERROR = 40, WARNING = 30, INFO = 20, DEBUG = 10, NOTSET = 0
  format: "%(asctime)s - %(levelname)s - %(module)s - %(message)s"
experiment_path: ./experiments/results/ohlc_time_tick/dqn
test_policy: true # whether to test / apply the policy after training or not

# define gym environment that will be injected to the agent
gym_environment:
  enable_render: false # whether to render the policy application or not
  window_size: 30
  scale_reward: 1
  data:
    train_path: ./experiments/data/minmax/train.csv
    test_path: ./experiments/data/minmax/test.csv
    attributes: ["time", "open", "high", "low", "close", "tick_volume", "spread", "real_volume", "bid_count", "bid_mean", "bid_std", "bid_min", "bid_25%", "bid_50%", "bid_75%", "bid_max", "ask_count", "ask_mean", "ask_std", "ask_min", "ask_25%", "ask_50%", "ask_75%", "ask_max", "last_count", "last_mean", "last_std", "last_min", "last_25%", "last_50%", "last_75%", "last_max", "volume_count", "volume_mean", "volume_std", "volume_min", "volume_25%", "volume_50%", "volume_75%", "volume_max", "time_msc_count", "time_msc_mean", "time_msc_std", "time_msc_min", "time_msc_25%", "time_msc_50%", "time_msc_75%", "time_msc_max", "flags_count", "flags_mean", "flags_std", "flags_min", "flags_25%", "flags_50%", "flags_75%", "flags_max", "volume_real_count", "volume_real_mean", "volume_real_std", "volume_real_min", "volume_real_25%", "volume_real_50%", "volume_real_75%", "volume_real_max"]

# define the rl agent (using the above gym environment)
agent:
  episodes: 100
  log_interval: 1
  sb_logger: ["stdout", "csv"] # format options are: "stdout", "csv", "log", "tensorboard", "json"

  # define model with its specific parameters
  model:
    name: DQN
    pretrained_path: # empty if start from scratch TODO implement
    policy: MlpPolicy
    device: auto # (cuda / cpu / auto)
    verbose: 1 # 0 none, 1 training information, 2 debug
    learning_rate: 0.0001
    gamma: 0.99
    seed: 1
    buffer_size: 1000000
    learning_starts: 50000
    batch_size: 32
    tau: 1.0
    train_freq: 4
    gradient_steps: 1
    exploration_fraction: 0.1
    exploration_initial_eps: 1.0
    exploration_final_eps: 0.05
    predict_deterministic: true # only for testing